import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, confusion_matrix
data = pd.read_csv("C:\\Users\\theri\\Downloads\\sms+spam+collection\\SMSSpamCollection", 
                   sep='\t', names=['Label', 'Message'])
data['Label'] = data['Label'].map({'ham': 0, 'spam': 1})
X_train, X_test, y_train, y_test = train_test_split(data['Message'], data['Label'], test_size=0.2, random_state=1)
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)
model = MultinomialNB()
model.fit(X_train_vec, y_train)
y_pred = model.predict(X_test_vec)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
new_message = ["Congratulations! You've won a free ticket."]
new_message_vec = vectorizer.transform(new_message)
print("Prediction for new message:", "Spam" if model.predict(new_message_vec)[0] == 1 else "Ham")
